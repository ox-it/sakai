<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>oxam</artifactId>
        <groupId>uk.ac.ox.oucs.vle</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <name>OXAM - Tool</name>
    <artifactId>oxam-tool</artifactId>

    <packaging>war</packaging>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>1.6.1</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    
    <dependencies>

        <!-- project dependencies -->
        <dependency>
            <groupId>uk.ac.ox.oucs.vle</groupId>
            <artifactId>oxam-api</artifactId>
        </dependency>

        <dependency>
            <!-- This is so we can easily test the importer.
                It means Eclipse doesn't flag up incorrect usage, but a command
                line build maven build
                should show any problems as it has proper classpath isolation
                for different scopes. -->
            <groupId>uk.ac.ox.oucs.vle</groupId>
            <artifactId>oxam-impl</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- third party dependencies -->
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-extensions</artifactId>
            <version>1.4.17</version>
        </dependency>
        <dependency>
            <groupId>org.wicketstuff</groupId>
            <artifactId>progressbar</artifactId>
            <version>1.4.17</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <!-- Sakai dependencies -->
        <dependency>
            <groupId>org.sakaiproject.kernel</groupId>
            <artifactId>sakai-kernel-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.kernel</groupId>
            <artifactId>sakai-component-manager</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.sakaiproject.kernel</groupId>
            <artifactId>sakai-kernel-util</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Used for validating the imports -->
        <dependency>
            <groupId>org.apache.bval</groupId>
            <artifactId>bval-jsr303</artifactId>
            <version>0.3-incubating</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.4</version>
        </dependency>
        <!-- For parsing Excel Files. -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>3.8-beta4</version>
        </dependency>
        <!-- For parsing CSV files -->
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>2.0</version>
        </dependency>
        <!-- Could be in the API, but SolrJ has quite a few dependencies.
            So we're duplicating it in components and in the tool. The
            other option would
            have been to write a custom API which wraps the SolrJ API
            but this is too much
            work. -->
        <dependency>
            <groupId>org.apache.solr</groupId>
            <artifactId>solr-solrj</artifactId>
        </dependency>

        <dependency>
            <!-- This is so that we get autowiring during test. -->
            <groupId>org.springframework</groupId>
            <artifactId>spring</artifactId>
            <scope>test</scope>
            <version>2.5.6.SEC03</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.5</version>
        </dependency>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.1_3</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <scope>provided</scope>
        </dependency>
        <!-- This is in shared as well, but because tomcat puts the webapp classloader before the shared classloader
             we can specify a newer version and it should work -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>compile</scope>
            <version>2.1</version>
        </dependency>
    </dependencies>


    <build>
        <resources>
            <!-- include our HTML but not the Java source -->
            <resource>
                <directory>src/java</directory>
                <includes>
                    <include>**</include>
                </includes>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <!-- include our log4j.properties -->
            <resource>
                <directory>src/resources</directory>
                <includes>
                    <include>*.properties</include>
                    <include>*.xml</include>
                </includes>
            </resource>
        </resources>
	</build>

</project>
