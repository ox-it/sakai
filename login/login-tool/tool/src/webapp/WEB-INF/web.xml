<?xml version="1.0" encoding="UTF-8"?>
<web-app id="WebApp_9" version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee" 
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
    <display-name>xlogin</display-name>
    <description>login</description>

    <filter>
        <filter-name>sakai.request</filter-name>
        <filter-class>org.sakaiproject.util.RequestFilter</filter-class>
    </filter>

    <filter>
        <filter-name>sakai.request.container</filter-name>
        <filter-class>org.sakaiproject.util.RequestFilter</filter-class>
       <init-param>
            <param-name>tool.placement</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>remote.user</param-name>
            <param-value>false</param-value>
        </init-param>
    </filter>

     <filter>
         <filter-name>springSecurityFilterChain</filter-name>
         <filter-class>org.sakaiproject.login.springframework.SafeDelegatingFilterProxy</filter-class>
     </filter>

     <filter-mapping>
         <filter-name>springSecurityFilterChain</filter-name>
         <url-pattern>/container/*</url-pattern>
         <dispatcher>REQUEST</dispatcher>
         <dispatcher>FORWARD</dispatcher>
         <dispatcher>INCLUDE</dispatcher>
     </filter-mapping>

    <filter-mapping>
        <filter-name>sakai.request</filter-name>
        <servlet-name>sakai.login</servlet-name>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>sakai.request.container</filter-name>
        <servlet-name>sakai.login.container</servlet-name>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    
    <filter-mapping>
        <filter-name>sakai.request.container</filter-name>
        <servlet-name>sakai.logout.container</servlet-name>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

	
	
	<filter-mapping>
		<!-- As we don't want the remote user -->
		<filter-name>sakai.request.container</filter-name>
		<servlet-name>sakai.twofactor</servlet-name>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
		<dispatcher>INCLUDE</dispatcher>
	</filter-mapping>

    <servlet>
        <servlet-name>sakai.login</servlet-name>
        <servlet-class>org.sakaiproject.login.tool.SkinnableLogin</servlet-class>
        <init-param>
            <param-name>container</param-name>
            <param-value>/sakai-login-tool/container</param-value>
        </init-param>
        <init-param>
            <param-name>xlogin</param-name>
            <param-value>/sakai-login-tool/xlogin</param-value>
        </init-param>
        <init-param>
        	<param-name>container-logout</param-name>
        	<param-value>/sakai-login-tool/container/logout</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet>
        <servlet-name>sakai.twofactor</servlet-name>
        <servlet-class>org.sakaiproject.login.tool.TwoFactorLogin</servlet-class>
        <init-param>
            <param-name>twofactor</param-name>
            <param-value>/sakai-login-tool/twofactor</param-value>
        </init-param>
        <init-param>
        	<param-name>shibbolethUrl</param-name>
        	<param-value>/Shibboleth.sso/LoginTwoFactor</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    

    <servlet>
        <servlet-name>sakai.login.container</servlet-name>
        <servlet-class>org.sakaiproject.login.tool.ContainerLogin</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <servlet>
    	<servlet-name>sakai.logout.container</servlet-name>
    	<servlet-class>org.sakaiproject.login.tool.ContainerLogout</servlet-class>
    </servlet>

    <!-- Specific mappings are needed as the default servlet has been re-mapped -->
    <servlet>
        <servlet-name>exception.jsp</servlet-name>
        <jsp-file>/exception.jsp</jsp-file>
    </servlet>

    <servlet>
        <servlet-name>missing.jsp</servlet-name>
        <jsp-file>/missing.jsp</jsp-file>
    </servlet>

	<!-- map the container login, and then cause it to trigger container authentication -->
    <servlet-mapping>
        <servlet-name>sakai.login.container</servlet-name>
        <url-pattern>/container/*</url-pattern>
    </servlet-mapping>
    
    <!--  map the container logout -->
    <servlet-mapping>
        <servlet-name>sakai.logout.container</servlet-name>
        <url-pattern>/container/logout</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>sakai.twofactor</servlet-name>
        <url-pattern>/twofactor/*</url-pattern>
    </servlet-mapping>

     <servlet-mapping>
         <servlet-name>sakai.login</servlet-name>
         <url-pattern>/*</url-pattern>
     </servlet-mapping>

     <listener>
         <listener-class>org.sakaiproject.util.SakaiContextLoaderListener</listener-class>
     </listener>

	<listener>
        <listener-class>org.sakaiproject.util.ToolListener</listener-class>
    </listener>

  <error-page>
    <exception-type>java.lang.RuntimeException</exception-type>
    <location>/exception.jsp</location>
  </error-page>
 
  <error-page>
    <exception-type>org.sakaiproject.login.tool.LoginException</exception-type>
      <location>/exception.jsp</location>
  </error-page>

  <error-page>
    <exception-type>org.sakaiproject.login.tool.LoginMissingException</exception-type>
    <location>/missing.jsp</location>
  </error-page>

</web-app>
